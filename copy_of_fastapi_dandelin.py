# -*- coding: utf-8 -*-
"""Copy of FastApi_Dandelin.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-1jLGG2ibNDYpo9db0zYgOPKx9Xj7oH9
"""

!pip install fastapi Pillow python-multipart torch transformers uvicorn nest-asyncio pyngrok

from transformers import ViltProcessor, ViltForQuestionAnswering
import requests
from PIL import Image

processor = ViltProcessor.from_pretrained("dandelin/vilt-b32-finetuned-vqa")
model = ViltForQuestionAnswering.from_pretrained("dandelin/vilt-b32-finetuned-vqa")

# prepare image + question
url = "http://images.cocodataset.org/val2017/000000039769.jpg"
image = Image.open(requests.get(url, stream=True).raw)

text = "What are the colors of the cats?"

# prepare inputs
encoding = processor(image, text, return_tensors="pt")

# forward pass
outputs = model(**encoding)
logits = outputs.logits
idx = logits.argmax(-1).item()


print("Predicted answer:", model.config.id2label[idx])

# TODO: put above code into a function that accepts image and text as input

def model_pipeline(text: str, image: Image):
    # prepare inputs
    encoding = processor(image, text, return_tensors="pt")

    # forward pass
    outputs = model(**encoding)
    logits = outputs.logits
    idx = logits.argmax(-1).item()

    return  model.config.id2label[idx]

from typing import Union
from fastapi import FastAPI, UploadFile
import io
from PIL import Image

app = FastAPI()


@app.get("/")
def read_root():
    return {"Hello": "World"}


@app.post("/ask")
def ask(text: str, image: UploadFile):
    content = image.file.read()

    image = Image.open(io.BytesIO(content))
    #image = Image.open(image.file)

    result = model_pipeline(text, image)
    return {"answer": result}

from google.colab import userdata
token=userdata.get('ngrok')

token

import nest_asyncio
from pyngrok import ngrok
import uvicorn
import asyncio

nest_asyncio.apply()

ngrok.set_auth_token(token)
ngrok_tunnel = ngrok.connect(8000)
print('Public URL:', ngrok_tunnel.public_url)

# Configure uvicorn server
config = uvicorn.Config(app, port=8000, loop="asyncio")
server = uvicorn.Server(config=config)

# Get the current event loop and run the server
loop = asyncio.get_event_loop()
loop.run_until_complete(server.serve())

"""https://media.istockphoto.com/id/492696926/photo/wood-mouse-on-root-of-tree.jpg?s=612x612&w=0&k=20&c=vHJ24llld5HiUz10mQAOzQfnQz-LE2Xg5wBYM4S1zX0="""